<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CustomerSite</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <link rel="stylesheet" href="~/CustomerSite.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow">
            <div style="display: flex; padding: 0 130px" class="container-fluid">
                @*<a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">CustomerSite</a>*@
                <div class="logo">
                    <img style="width: 150px" src="~/images/logo.webp" asp-append-version="true">
                </div>

                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            @*<a class="nav-link text-dark active" asp-area="" asp-controller="Home" asp-action="Index">Trang chủ</a>*@
                            <a class="nav-link text-dark active" asp-area="" asp-page="/Index">Trang chủ</a>
                        </li>
                       
                         <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Product">Sản phẩm</a>
                        </li>
                    </ul>
                </div>

                <div class="add-to-cart">
                    <i class="fa-solid fa-magnifying-glass signature-color search"></i>
          
                    <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#exampleModal">
                        <i class="fa-solid fa-basket-shopping signature-color cart"></i>
                    </button>

                <!-- Modal -->
                    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="cart-model modal-dialog">
                        <div class="modal-content cart-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Shopping Cart</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div id="cart-body" class="modal-body">
                           @* <div class="order-line">
                                <div class="orderline-img">
                                    <img src="https://product.hstatic.net/200000399631/product/ca_phe_sua__da__927c994afcc944a0860a6c174e65f729_1024x1024.jpg" alt="">
                                </div>
                                <div>
                                    <div class="orderline-name">
                                        Soda Xoài Xanh Muối Ớt
                                    </div>
                                    <input style="margin: 10px" type="number" min="0" max="20">
                                    <div class="orderline-price">39,000đ</div>
                                </div>
                           </div>
                           <div id="order-total">
                               <div class="total-name">TOTAL</div>
                               <div id="total-price">39.000đ</div>
                           </div> *@
                        </div>
                        <div class="modal-footer">
                            <button data-bs-dismiss="modal" onclick="checkOut()" style="background-color: #f57f48; color: white; padding: 15px; width: 100%" type="button" class="btn">Proceed To Checkout</button>
                        </div>
                        </div>
                    </div>
                    </div>
                </div>
                <div class="dropdown">
                    <button class="dropdown-btn" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                       <i class="fa-solid fa-bars signature-color bar"></i>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1" style="">
                        <li><a asp-page="/Register" class="dropdown-item">Đăng ký</a></li>
                        <li><a class="dropdown-item" href="#">Đăng nhập</a></li>
                    </ul>
                </div>
            </div>
            <div style="width: 100%" class="toast-container position-fixed top-0 center p-3">
                <div id="liveToastCheckOut" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-body">
                        <i class="fa-solid fa-circle-check"></i> Đặt hàng thành công!!!
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div>
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        @* <div class="container">
            &copy; 2022 - CustomerSite - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div> *@
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
        const cartBody = document.getElementById('cart-body');
    const checkCartStorage = cart => {
        if(window.localStorage.length == 0){
            return []
        }else {
           return JSON.parse(window.localStorage.getItem("cart"))
        }
    }

    const domCart = _cart => {
        cartBody.innerHTML = ''
        if (_cart.length == 0){
            cartBody.innerHTML = "Chưa có đơn hàng trong giỏ hàng !!!"
        }
        else {
            _cart.forEach(c => {
            let orderLine = document.createElement('div')
            orderLine.className = 'order-line'
            orderLine.cloneNode(true);
            
            let orderLineImage = document.createElement('div')
            orderLineImage.className = 'orderline-image'

            let img = document.createElement('img')
            img.src = c.imagePath
            orderLineImage.append(img)
            
            let orderLineName = document.createElement('div')
            orderLineName.className = 'orderline-name'
            orderLineName.innerText = c.name
            
            let orderLinePrice = document.createElement('div')
            orderLinePrice.className = 'orderline-price'
            orderLinePrice.innerText = c.price

            let inputNumber = document.createElement("input")
            inputNumber.id = c.id
            inputNumber.type="number";
            inputNumber.min = 0;
            inputNumber.max = 10;
            inputNumber.value = c.number
            inputNumber.onchange = (e) => {
                let index = _cart.findIndex(_c => _c.id === c.id)
                let cartUpdate = [..._cart]
                cartUpdate[index].number = e.target.value
                window.localStorage.setItem("cart", JSON.stringify(cartUpdate))
                domCart(cartUpdate);
            }
            
            let divEmpty = document.createElement('div')
            divEmpty.style = "width: 170px"
            divEmpty.append(orderLineName, inputNumber ,orderLinePrice)

            let orderLineDelete = document.createElement('button')
            orderLineDelete.className = 'btn btn-danger'
            orderLineDelete.innerHTML = 'x'
            orderLineDelete.onclick = () => {
                let cartRemove = _cart.filter(r => r.id !== c.id)
                window.localStorage.setItem("cart", JSON.stringify(cartRemove))
                domCart(cartRemove)
            } 
            

            orderLine.append(orderLineImage, divEmpty, orderLineDelete)
            
            cartBody.append(orderLine)
            })

            const orderTotal = document.createElement('div')
            orderTotal.id = 'order-total'

            let totalName = document.createElement('div')
            totalName.className = 'total-name'
            totalName.innerHTML = 'TOTAL'
            
            total = _cart.map(c => c.price * c.number).reduce((a, b) => a + b)
            var totalPrice = document.createElement('div')
            totalPrice.className = 'total-price'
            totalPrice.innerHTML = total

            orderTotal.append(totalName, totalPrice)
            cartBody.append(orderTotal)
            }
        }

    var cart = []
    var total = 0;

    if (window.localStorage.length) {
        cart = JSON.parse(localStorage.getItem("cart"))
        domCart(cart)
    }else {
        cartBody.innerHTML = "Chưa có đơn hàng trong giỏ hàng  !!!"
        cart = []
    }
   

    const addToCart = (o) => {
        var cart = checkCartStorage(cart)
        order = {...o, number: 1}
        var checkId = cart.map(x => x.id)

        if (!checkId.includes(order.id)){
            checkId.push(order.id)
            cart.push(order)
        }else {
            let index = cart.findIndex(x => x.id === order.id)
            cart[index].number ++ 
        }
        
        window.localStorage.setItem("cart", JSON.stringify(cart))
        domCart(cart)
      
        const toast = new bootstrap.Toast(toastLiveExample)
        toast.show() 
    }

    const toastLiveExample = document.getElementById('liveToast')
    
    
    const checkOut = () => {
        var cart = JSON.parse(localStorage.getItem('cart'))
       
        let orderLine = cart.map(x => {
            return {
                productId: x.id,
                number: +x.number
            }
        })

        let orderBodyRequest = {
            userId: 1,
            created: new Date(),
            updated: new Date(),
            orderLine: orderLine
        }
        axios.post("https://localhost:7010/api/order", orderBodyRequest)
        .then(res => {
            localStorage.removeItem("cart");
            domCart([])
            new bootstrap.Toast(document.getElementById('liveToastCheckOut')).show()
        }).catch(err => {
            console.log(err)
        })

    }
    </script>
</body>
</html>

<style>
    .cart-model {
        position: absolute;
        right: 0;
        width: 350px;
        margin: 0;
        height: 100vh;
    }

    .cart-content {
        height: 100vh
    }
    .dropdown-btn {
        border: none;
        background-color: transparent;
    }
    .signature-color {
        color: #f57f48;
    }
    .active , .nav-link:hover {
        color: #f57f48 !important; 
    }
    .search, .cart, .bar {
        margin: 0 5px;
        font-size: 18px;
        cursor: pointer;
    }
    .navbar-nav {
        padding: 0 20px;
    }
    .orderline-image img {
        width: 100%;
    }
    .orderline-image {
        width: 70px;
    }
    .order-line {
        display: flex;
        border-bottom: 1px solid #f4f4f4;
        padding-bottom: 10px;
        align-items: center;
        justify-content: space-between;
    }
    .orderline-name {
        font-size: 14px;
        margin-left: 10px;
    }
    .orderline-price {
        margin: 0 10px;
        color: #f57f48;
        font-size: 14px;
    }
    #order-total {
        color: #606266;
        display: flex !important;
        justify-content: space-between !important;
        margin: 10px 0;
        font-size: 18px;
    }
    .order-line input {
        margin: 10px;
    }
    #cart-body {
        overflow: auto;
    }

</style>



