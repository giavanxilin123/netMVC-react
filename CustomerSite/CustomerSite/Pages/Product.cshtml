@page
@model CustomerSite.Pages.ProductModel
@{
    <div class="product-carousel">
        <div class="product-bg-carousel"></div>
    </div>
    <div class="product-searchbar">
        <div class="search-detail input-group rounded">
            <input type="search" class="form-control rounded" placeholder="Tìm món yêu thích tại đây..." aria-label="Search" aria-describedby="search-addon" />
            <span class="input-group-text border-0" id="search-addon">
                <i class="fas fa-search"></i>
            </span>
            @* <li class="nav-item">
                    <a class="nav-link text-dark" >Sản phẩm</a>
            </li> *@
        </div>
    </div>

    <div class="product-categories">
        <h2 style="font-weight: 700; margin: 50px 0">ĐẶT MÓN NGAY - SAY CHUK CHUK</h2>
        @* <form method="post">
             <button asp-page-handler="productbycategories" asp-route-categories="11">refresher</button>
        </form> *@
        <form class="filter-categories" method="post">
            <button asp-page-handler="productbycategories" asp-route-categories="All" class="filter-name active-filter">Tất cả</button>
            <button asp-page-handler="productbycategories" asp-route-categories="Refresher" class="filter-name">Refresher</button>
            <button asp-page-handler="productbycategories" asp-route-categories="Fruit Tea" class="filter-name">Fruit Tea</button>
            <button asp-page-handler="productbycategories" asp-route-categories="Wellness Tea" class="filter-name">Wellness Tea</button>
            <button asp-page-handler="productbycategories" asp-route-categories="Coffee" class="filter-name">Coffee</button>
            <button asp-page-handler="productbycategories" asp-route-categories="Milk Tea" class="filter-name">Milk Tea</button>
            <button asp-page-handler="productbycategories" asp-route-categories="Cake" class="filter-name">Cake</button>
        </form>

        <div class="product-row row">
            @foreach (var i in Model.productList)
            {
                <div class="col-2 mb-4">
                    <a asp-page="detail" asp-route-id=@i.Id class="product-detail">
                        <div class="product-img">
                            <img src= "@i.ImagePath" alt="">
                        </div>
                        <div  class="name">@i.Name</div>
                        <hr style ="color: red; width: 20%; margin: 0 auto">
                        <div style="margin: 10px 0;" class="price signature-color">@i.Price</div>
                    </a>
                    <button onclick="addToCart({id: @i.Id, name: `@i.Name`, price: @i.Price, imagePath: `@i.ImagePath`})" type="button" class="btn btn-addtocart" id="liveToastBtn">Thêm vào giỏ hàng</button>
                    <div class="toast-container position-fixed bottom-0 end-0 p-3">
                        <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                            <div class="toast-body">
                                <i class="fa-solid fa-circle-check"></i> Thêm vào giỏ hàng thành công !!!
                            </div>
                        </div>
                    </div>
                    @* <button style="z-index: 1000" onclick = > Thêm vào giỏ hàng</button> *@
                    
                </div>
            }
        </div>
        
    </div>

}

<style>
    .product-row {
        padding: 0 20px;
    }
    .product-bg-carousel {
        background: url("http://theme.hstatic.net/200000399631/1000761068/14/slide_2.jpg?v=302");
        height: 400px;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
    }
    .search-detail {
        width: 40%;
        margin: 0 auto;
    }
    .product-searchbar {
        background-color: #f57f48;
        padding: 15px;
    }
    .search-detail input {
        border-radius: 20px !important;
    }
    .search-detail .input-group-text {
        position: absolute;
        right: 0;
        height: 38px;
        border-radius: 20px;
        background-color: transparent;
        cursor: pointer;
    }
    .search-detail .fa-search {
        color: #f57f48
    }
    .product-categories {
        text-align: center
    }
    .filter-categories {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 50px;
    }
    .filter-name {
        cursor: pointer;
        padding: 20px 60px;
        border: none;
        background-color: transparent;
    }
    .active-filter {
        background-color: #f57f48;
        color: white !important;
    }
    .name  {
        font-size: 14px;
        font-weight: 500;
        margin-bottom: 10px;
    }
    .price {
        font-size: 14px;
        font-weight: 500;
    }
    .product-detail:hover {
        border-color: #f57f48;
        box-shadow: 0 10px 10px 0 silver;
    }

    .product-detail:hover hr{
        width: 40%;
        color: green;
    }
    .product-img img {
        width: 100%;
    }
    .product-detail {
        border: 1px solid silver;
        cursor: pointer;
        display: block;
        color: black;
        text-decoration: none;
    }
    .product-detail:hover {
        color: black;
        text-decoration: none;
    }
    .toast-body {
        background-color: #f0f9eb;
        border-color: #e1f3d8;
        color: #67c23a
    }
    .btn-addtocart {
        background: #f57f48; color: white; font-size: 14px; width: 100%; margin-top: 10px;
    }
    .btn-addtocart:hover {
        color: white;
        background-color: orange;
    }

</style>

<script>
    const cartBody = document.getElementById('cart-body');

    const domCart = _cart => {
        cartBody.innerHTML = ''
        if (_cart.length == 0){
            cartBody.innerHTML = "Chưa có đơn hàng trong giỏ hàng !!!"
        }
        else {
            _cart.forEach(c => {
            let orderLine = document.createElement('div')
            orderLine.className = 'order-line'
            orderLine.cloneNode(true);
            
            let orderLineImage = document.createElement('div')
            orderLineImage.className = 'orderline-image'

            let img = document.createElement('img')
            img.src = c.imagePath
            orderLineImage.append(img)
            
            let orderLineName = document.createElement('div')
            orderLineName.className = 'orderline-name'
            orderLineName.innerText = c.name
            
            let orderLinePrice = document.createElement('div')
            orderLinePrice.className = 'orderline-price'
            orderLinePrice.innerText = c.price

            let inputNumber = document.createElement("input")
            inputNumber.id = c.id
            inputNumber.type="number";
            inputNumber.min = 0;
            inputNumber.max = 10;
            inputNumber.value = c.number
            inputNumber.onchange = (e) => {
                console.log(e.target.value)
            }
            
            let divEmpty = document.createElement('div')
            divEmpty.style = "width: 170px"
            divEmpty.append(orderLineName, inputNumber ,orderLinePrice)

            let orderLineDelete = document.createElement('button')
            orderLineDelete.className = 'btn btn-danger'
            orderLineDelete.innerHTML = 'x'
            orderLineDelete.onclick = () => {
                let cartRemove = _cart.filter(r => r.id !== c.id)
                window.localStorage.setItem("cart", JSON.stringify(cartRemove))
                domCart(cartRemove)
            } 
            

            orderLine.append(orderLineImage, divEmpty, orderLineDelete)
            
            cartBody.append(orderLine)
            })

            const orderTotal = document.createElement('div')
            orderTotal.id = 'order-total'

            let totalName = document.createElement('div')
            totalName.className = 'total-name'
            totalName.innerHTML = 'TOTAL'
            
            total = _cart.map(c => c.price * c.number).reduce((a, b) => a + b)
            var totalPrice = document.createElement('div')
            totalPrice.className = 'total-price'
            totalPrice.innerHTML = total

            orderTotal.append(totalName, totalPrice)
            cartBody.append(orderTotal)
            }
    }


    var cart = []
    var total = 0;

    if (window.localStorage.length) {
        cart = JSON.parse(localStorage.getItem("cart"))
        domCart(cart)
    }else {
        cartBody.innerHTML = "Chưa có đơn hàng trong giỏ hàng !!!"
        cart = []
    }
   

    const addToCart = (o) => {
        order = {...o, number: 1}
        var checkId = cart.map(x => x.id)

        if (!checkId.includes(order.id)){
            checkId.push(order.id)
            cart.push(order)
        }else {
            let index = cart.findIndex(x => x.id === order.id)
            cart[index].number ++ 
        }
        
        window.localStorage.setItem("cart", JSON.stringify(cart))
        domCart(cart)
      
        const toast = new bootstrap.Toast(toastLiveExample)
        toast.show() 
    }

    const toastLiveExample = document.getElementById('liveToast')

</script>



